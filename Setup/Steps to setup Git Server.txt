# Server : Initialized empty Git repository in project.git/
$ mkdir project.git
$ cd project.git
$ git init --bare


# Client computer : Upload code to server
$ cd myproject  (with project code inside)
$ (Add/Remove .gitignore to the folders git should ignore)
$ git init
$ git add .
$ git commit -m 'initial commit'
$ git remote add origin ssh://root@10.16.90.215/(path)/project.git
$ git push origin master


# The other client computer (jh7b): Test download & push
$ git clone ssh://jh7b@10.16.90.215/(path)/project.git
$ cd project.git
$ vim README
$ git add .
$ git commit -m 'fix for the README file'
$ git push origin master

		                   
# Server : Disable password prompts when doing git pull 
1. ssh-keygen -t rsa   (this generates key at "~/.ssh/id_rsa.pub")
2. cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys  (Append the contents of your public key (that's id_rsa.pub) to the Git server's ~/.ssh/authorized_keys file.)


# Server : Test pull without a password
1. cd GitCloneFolder
2. git clone ssh://root@10.16.90.215/(path)/project.git
3. cd project.git
4. git pull  (you should NOT be asked a password)	      


# Server : How to hook 
1. Create file on server:  project.git/hooks/post-receive   (make it executable)
2. Add command in post-receive  (what will do after push)
	 Ex : ssh root@127.0.0.1 -t "cd /GitCloneFolder/project.git;git pull origin master"  --> auto git pull after push
	 
	 
# Client's computer : Test push
1. cd project.git
2. vim README
3. git add .
4. git commit -m 'test push'
5. git push origin master
6. Check server's "GitCloneFolder/project.git" to see if this commit synced.