LIST OF NOSQL DATABASES : http://nosql-database.org/



[MemCache]
    Install - https://www.digitalocean.com/community/tutorials/how-to-install-and-use-memcache-on-ubuntu-14-04



[Mongo DB]
    - !Official doc : https://docs.mongodb.com/manual/
	- Install on Ubuntu : http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/
	- Quick trial : http://try.mongodb.org/
	- !Introduction : http://www.codedata.com.tw/database/mongodb-tutorial-1-setting-up-cloud-env/
	                  http://www.tutorialspoint.com/mongodb/
	- Config : /etc/mongodb.conf
	- Bind to all ip : 
	                Add "bind_ip = 0.0.0.0" to /etc/mongod.conf
	                http://stackoverflow.com/questions/4961177/how-to-listen-only-to-localhost-on-mongodb
                 OR (update 2017/5/1)
                    sudo vi /etc/mongod.conf    (modify :  bindIp: 0.0.0.0)
                    sudo service mongod restart

    - Backup & Restore : 
 	    https://docs.mongodb.com/manual/tutorial/backup-and-restore-tools/
		https://docs.mongodb.com/manual/reference/program/mongodump/#bin.mongodump
	    https://docs.mongodb.com/manual/reference/program/mongorestore/#bin.mongorestore

	- GUI tool :   http://docs.mongodb.org/ecosystem/tools/administration-interfaces/
	         http://blog.mongodirector.com/which-is-the-best-mongodb-gui/
	         (tried this) http://robomongo.org/
	         http://www.mongovue.com/
	- Find the latest three records (for command line):  db.collection_test.find().sort({time: -1}).limit(3)
	                      (for python code) : collection.find().sort("time", -1).limit(3):

	- php : define('connectionString', 'mongodb://domain:abc123@10.1.37.154:27017');  
	     - (legacy) http://php.net/manual/en/book.mongo.php   (See 'Core Classes')
	     - http://php.net/manual/en/set.mongodb.php
	  http://php.net/manual/en/mongo.sqltomongo.php  (SQL to Mongo Mapping Chart)
	  
	- mongo console (type 'mongo' on linux):    
	           mongo  (remote -->  mongo 10.1.37.154:27017/admin -u user -p pass) 
	           use db_test
	             db.collection_test.find()

	-[convert all fields to string] http://stackoverflow.com/questions/4973095/mongodb-how-to-change-the-type-of-a-field                 
	                             db.getCollection('collection_tmp').find({field_name : {$exists : true}}).forEach( function(obj) { obj.field_name = ""+obj.field_name; db.collection_tmp.save(obj); } )

	- Fast paging : http://blog.mongodirector.com/fast-paging-with-mongodb/

	- Convert MySQL Queries to MongoDB Syntax : http://www.querymongo.com
	                                        http://docs.mongodb.org/manual/reference/sql-comparison/  (SQL to Mongo Mapping Chart)
	                                        http://blog.serverdensity.com/wp-content/uploads/2010/06/sql-to-mongodb.pdf
	                                        
	- aggregate & group by : Select manufacturer, model, createDate, count(poNumber) From list Where location='US' Group By poNumber
														 -->    db.list.aggregate( 
																		    { 
																		        $match : {location : "US"} 
																		    }, 
																		    { 
																		        $group : {_id : "$poNumber", 
																		         manufacturer: {$push: "$manufacturer"}, 
																		         model: {$push: "$model"}, 
																		         createDate:{$push: "$createDate"}, 
																		         total : { $sum : 1 }} 
																		    } 
																		)

    - Join and field reference: 
        https://docs.mongodb.com/manual/reference/database-references/
            MongoDB applications use one of two methods for relating documents:
				(1)
				Manual references where you save the _id field of one document in another document as a reference. Then your application can run a second query to return the related data. These references are simple and sufficient for most use cases.
                (2)
				DBRefs are references from one document to another using the value of the first documentâ€™s _id field, collection name, and, optionally, its database name. By including these names, DBRefs allow documents located in multiple collections to be more easily linked with documents from a single collection.
				To resolve DBRefs, your application must perform additional queries to return the referenced documents. Many drivers have helper methods that form the query for the DBRef automatically. The drivers [1] do not automatically resolve DBRefs into documents.
				DBRefs provide a common format and type to represent relationships among documents. The DBRef format also provides common semantics for representing links between documents if your database must interact with multiple frameworks and tools.
			Unless you have a compelling reason to use DBRefs, use manual references instead.


    - Auto Complete : https://groups.google.com/forum/#!topic/mongodb-user/MOKYDp83rPs
                      http://www.drgcms.org/blog/Damjan%20Rems/how-to-speed-up-querying-for-autocomplete-fields-with-mongodb-2015-11-24
                      http://stackoverflow.com/questions/3305561/how-to-query-mongodb-with-like

                      


