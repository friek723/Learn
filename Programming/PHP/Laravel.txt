[Laravel] Most popular in 2015


- Install Laravel 4.2 with Apache on Ubuntu Server 14.04 : http://ulyssesonline.com/2014/07/24/install-laravel-4-2-on-ubuntu-server-14-04-lts/
- Install Laravel with an Nginx Web Server on Ubuntu 14.04 : https://www.digitalocean.com/community/tutorials/how-to-install-laravel-with-an-nginx-web-server-on-ubuntu-14-04

- CSRF Protection(cross-site request forgeries) : http://laravel.com/docs/5.1/routing#csrf-protection

- !! Shopping Cart : (series 1 ~ 16) https://www.youtube.com/watch?v=oc1_DHfL89k
                                     https://www.youtube.com/watch?v=4J939dDUH4M


- !! Examples (with AngularJs) : http://learninglaravel.net/topics/angularjs
                                 https://www.codetutorial.io/tutorial/laravel-5/
- Video course : https://laracasts.com/series/laravel-5-fundamentals
- Example : http://laravelbook.com/laravel-introduction/
- version : run "php artisan --version" in project root
- Model & Table : Laravel follows the convention of configuration mantra. 
                  This basically means, if you call your model "User", then Laravel will assume that your table name is "users". 
                  Setting the $table property(in Model) is useful when you want to give a table a name that does not follow this convention.
                  
                  http://laravel.com/docs/5.1/eloquent
                  http://culttt.com/2013/05/13/setting-up-your-first-laravel-4-model/
                  
- config: ".env" file at project root  (if mysql connection fail)
- list the routes enabled for an app (under project root): php artisan route:list
- quickly test your Laravel application without a web server :  "php artisan serve" 
      http://laravel-recipes.com/recipes/282/running-phps-built-in-web-server 
- jwt-auth : https://github.com/tymondesigns/jwt-auth/wiki
             ! Unable to get "Authorization " header : http://stackoverflow.com/questions/20853604/laravel-get-request-headers
- receive each SQL query executed by your application : Search "Listening For Query Events" in https://laravel.com/docs/5.2/database     



- command :  
   composer create-project --prefer-dist laravel/laravel project_name   (create new project)
   php artisan make:migration create_posts_table   (create migration)
   php artisan make:model Post                     (create model)
   php artisan make:controller PostController      (create controller)
   php artisan migrate                             (create DB tables from migration)
   php artisan migrate:rollback                    (rolls back the last "batch" of migrations that ran, which may include multiple migration files)




- Directory Structure
      View :  resources/views/XXX.blade.php
              resources/views/YYY/XXX.blade.php
      Model :      app/*.php  (class XXX extends Model)
      Controller : app/Http/Controllers/XXXController.php
      Route :      app/Http/routes.php  (root is public/)
      DB:     database/migrations/2014_10_12_000000_create_XXX_table.php
      Root for routes  +  index.html  +  AngularJS : public/
      Sql config  : .env
                    config/database.php
      config      : config/app.php
      service providers : app/Providers
      Middleware : app\Http\Middleware (filtering HTTP requests entering your application)
      Kernal (middleware & route) : app/Http/Kernal.php
      composer(use other lib) : composer.json     (run "composer update" in project root after updating this file)
      log & cache & session :  storage/...



- raw SQL query
      - https://laravel.com/docs/5.2/database#running-queries
      - ! https://laracasts.com/discuss/channels/general-discussion/raw-queries-1?page=1
      - http://fideloper.com/laravel-raw-queries



- Scaffold & CRUD Generator (sort by popularity): 
    - https://github.com/InfyOmLabs/laravel-generator
    - https://github.com/appzcoder/crud-generator
    - https://github.com/crocodic-studio/crudbooster
    - https://github.com/engrnvd/laravel-crud-generator  (!!!tried, easy)
        [step 1]
            "php artisan make:migration create_xxxs_table"   (create migration file)
            Add your schema in /database/migrations/create_xxxs_table.php
        [step 2]
            "php artisan migrate"       (create tables in DB from migration)
        [step 3] laravel-crud-generator
            "php artisan nvd:crud table_name"            
            This command will create below files based on TABLE table_name in DB.
            It will create : 
                  #Model class Location generated successfully.
                  #Route model binding inserted successfully in /var/www/html/jobseek/jobseeking/app/Providers/RouteServiceProvider.php
                  #created route: Route::resource('location','LocationController');
                  #LocationController generated successfully.
                  #View file index generated successfully.
                  #View file edit generated successfully.
                  #View file show generated successfully.
                  #View file create generated successfully.
        [Problem] It will overwrite Default User Model to (class User extends Model)
                  Should correct it back to default (class User extends Authenticatable)
                  Otherwise there is error doing JWT token auth

[Model]
    Mass assignment : specify either a "fillable" or "guarded" attribute on the model, as all Eloquent models protect against mass-assignment.
        http://stackoverflow.com/questions/22279435/what-does-mass-assignment-mean-in-laravel
        https://laravel.com/docs/5.2/eloquent#mass-assignment


[View]
    - Share variable in all views : http://stackoverflow.com/questions/29715813/laravel-5-global-blade-view-variable-available-in-all-templates
    
    - Where is css/js/images/fonts : http://stackoverflow.com/questions/22875556/where-do-javascript-and-css-files-go-in-a-laravel-project
    
    - Generate URLs to Named Routes : $url = route('routeName', $query_params);
       - https://laravel.com/docs/5.4/helpers#method-route 
       - http://dev-notes.eu/2016/11/generate-urls-to-named-routes-in-laravel/
          (1) Routes generated by the Route::resource() method will automatically have named routes assigned - taking the format resource.method
          (2) MANUALLY SPECIFY NAMED ROUTES : This is achieved by chaining the name() method to the route definition: 
              in routes.php : Route::get('about', 'PageController@showAbout')->name('about');
              in view : $url = route('about',$query_params);  
                        (query_params is "http://...?a=b&c=d")


[Controller]
    - route model binding : https://laravel.com/docs/5.2/routing#route-model-binding
    
    - input validation : 
         Option 1 : Handle error message in Controller
             https://laravel.io/forum/12-11-2015-how-to-implement-laravel-request-validation
             Controller :
                 use Validator;
                 $validator = Validator::make($request->all(), Job::validationRules());
                 if ($validator->fails()) {
                     $message = $validator->errors();
                     Log::info('postjob_api Validator error : '.$message);
                     return response()->json($message, 500);
                 }


         Option 2 : Laravel will automatically redirect the user back to their previous location. In addition, all of the validation errors will automatically be set to the view in $errors. See https://laravel.com/docs/5.4/validation#form-request-validation
             Controller : 
                 $this->validate($request, Job::validationRules());
             View : 
                 @if (count($errors) > 0)
                            @foreach ($errors->all() as $error)
                                <li>{{ $error }}</li>
                            @endforeach
                 @endif




[Migration]
    - Create Table : 
        [step 1]
            "php artisan make:migration create_xxxs_table"   (create migration file)
             Add your schema in /database/migrations/create_xxxs_table.php
        [step 2]
            "php artisan migrate"       (create tables in DB from migration)

        [Problem]
             Schema::create('table_names',...).  
             !! [Table Name] Do NOT add "s" for the noun that cannot add "s"
                (The noun's singular == plural )
                Because Laravel Eloquent will look for singular form (== plural form)
             Ex : use "education" instead of "educations" in Schema::create('education',...)
             - https://laracasts.com/discuss/channels/eloquent/laravel-table-names-are-plural-by-default

    - Adding/Renaming field in migration-schema : !! Do Not alter old migration file. Add new migration file for adding/renaming column. (This is how Laravel is designed and keeps track of migration history.)
        - http://stackoverflow.com/questions/30682362/adding-field-to-laravel-migration-schema
        step 1 : php artisan make:migration alter_users_table_add_xxx
        step 2 : Add new column (edit .../database/migrations/alter_users_table_add_xxx.php)
                 public function up()
                 {
                      if (!Schema::hasColumn('users', 'location_id')) {
                          Schema::table('users', function(Blueprint $table)
                          {
                              $table->integer('location_id')->unsigned();
                              $table->foreign('location_id')->references('id')->on('locations');
                          });
                      }
                 }
        step 3 : php artisan migrate     (modify DB)
        
        [Problem : adding a new column which is a foreign key => be sure to set default value] 
            - https://laravel.io/forum/09-18-2014-foreign-key-not-saving-in-migration
            [Error] Run migrate, see "Cannot add or update a child row: a foreign key constraint fails"
                    Sometimes there won't be any migration error and just show completed without adding new columns to DB.
            [Solution] Set default value : $table->integer('some_foreign_id')->unsigned()->default(1);

[setup errors]
    - 500-internal-server-error (all http request got error) : The storage directory needs to be writable by the webserver user. 
        (solution :  sudo chown -R ubuntu:www-data project_root
                     sudo chmod -R 777 storage    (No need)
        )
        - !http://stackoverflow.com/questions/23540083/failed-to-open-stream-permission-denied-error-laravel  
        - http://stackoverflow.com/questions/31543175/getting-a-500-internal-server-error-on-laravel-5-ubuntu-14-04
        - http://stackoverflow.com/questions/17020513/laravel-4-failed-to-open-stream-permission-denied
        
    - 404 Not Found (all http request got error) : 
        (1) It's all about ".htaccess" and "mod_rewrite", there is a default .htaccess under Laravel project/public/.
        (2) The API URL is not correct
        solution 1: 
                    [step 1]
                        vi "/etc/apache2/apache2.conf" ("AllowOverride" None ==> All)   
                                                <Directory /var/www/>
                                                        AllowOverride All
                                                </Directory>
                    [step 2] activate mod_rewrite
                         sudo a2enmod rewrite
                         sudo service apache2 restart

                    - http://stackoverflow.com/questions/21458080/the-requested-url-projectname-users-was-not-found-on-this-server-laravel?answertab=votes#tab-top
                    - https://laravel.io/forum/06-11-2014-not-found-but-route-exists

        solution 2 (!!Better):
                    [step 1] 
                     vi "/etc/apache2/sites-available/000-default.conf"
                     Add :   <Directory /var/www/html>
                               Options Indexes FollowSymLinks MultiViews
                               AllowOverride All
                               Order allow,deny
                               allow from all
                             </Directory>
                    [step 2] activate mod_rewrite
                         sudo a2enmod rewrite
                         sudo service apache2 restart

                    - !!! https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_rewrite-for-apache-on-ubuntu-14-04     
                    - https://www.digitalocean.com/community/tutorials/how-to-use-the-htaccess-file
